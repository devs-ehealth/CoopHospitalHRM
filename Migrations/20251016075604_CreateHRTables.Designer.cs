// <auto-generated />
using System;
using CoopHospitalHRM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoopHospitalHRM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251016075604_CreateHRTables")]
    partial class CreateHRTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceID"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("AttendanceType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeSpan?>("ClockIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ClockOut")
                        .HasColumnType("time");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsManualEntry")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOnCall")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("LunchEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("LunchStart")
                        .HasColumnType("time");

                    b.Property<decimal?>("OnCallHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("OvertimeHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<TimeSpan?>("ShiftIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ShiftOut")
                        .HasColumnType("time");

                    b.Property<string>("ShiftType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Present");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WardName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AttendanceID");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_Attendance", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DepartmentType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.ToTable("HR_Departments", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Designation", b =>
                {
                    b.Property<int>("DesignationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmployeeCategoryID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DesignationID");

                    b.HasIndex("EmployeeCategoryID");

                    b.ToTable("HR_Designations", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EPFContribution", b =>
                {
                    b.Property<int>("ContributionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContributionID"));

                    b.Property<DateTime?>("ContributionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EmployeeContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EmployerContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PayrollID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalContribution")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ContributionID");

                    b.HasIndex("PayrollID");

                    b.ToTable("HR_EPFContributions", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EPFETFInfo", b =>
                {
                    b.Property<int>("EPFETFID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EPFETFID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EPFNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("EPFPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ETFNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ETFPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("EPFETFID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_EPFETFInfo", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.ETFContribution", b =>
                {
                    b.Property<int>("ContributionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContributionID"));

                    b.Property<DateTime?>("ContributionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EmployerContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PayrollID")
                        .HasColumnType("int");

                    b.HasKey("ContributionID");

                    b.HasIndex("PayrollID");

                    b.ToTable("HR_ETFContributions", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("DesignationID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("EmployeeCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("InitialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicalLicenseNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NIC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkScheduleID")
                        .HasColumnType("int");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DesignationID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("EmployeeCategoryID");

                    b.HasIndex("EmployeeCode")
                        .IsUnique()
                        .HasFilter("[EmployeeCode] IS NOT NULL");

                    b.HasIndex("GradeID");

                    b.HasIndex("NIC")
                        .IsUnique()
                        .HasFilter("[NIC] IS NOT NULL");

                    b.HasIndex("WorkScheduleID");

                    b.ToTable("HR_Employees", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EmployeeAllowance", b =>
                {
                    b.Property<int>("EmployeeAllowanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeAllowanceID"));

                    b.Property<int>("AllowanceID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeAllowanceID");

                    b.HasIndex("AllowanceID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_EmployeeAllowances", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EmployeeCategory", b =>
                {
                    b.Property<int>("EmployeeCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeCategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeCategoryID");

                    b.ToTable("HR_EmployeeCategories", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EmployeePerformance", b =>
                {
                    b.Property<int>("PerformanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerformanceID"));

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Goals")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("PerformanceRating")
                        .HasColumnType("decimal(3,2)");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PerformanceID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ReviewerID");

                    b.ToTable("HR_EmployeePerformance", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.HospitalAllowance", b =>
                {
                    b.Property<int>("AllowanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllowanceID"));

                    b.Property<string>("AllowanceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllowanceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AllowanceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApplicableTo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxable")
                        .HasColumnType("bit");

                    b.HasKey("AllowanceID");

                    b.ToTable("HR_HospitalAllowances", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Leave", b =>
                {
                    b.Property<int>("LeaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveID"));

                    b.Property<DateTime?>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal?>("TotalDays")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveID");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("LeaveTypeID");

                    b.ToTable("HR_Leaves", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.LeaveBalance", b =>
                {
                    b.Property<int>("LeaveBalanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveBalanceID"));

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("CarriedForward")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalEntitlement")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Used")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("LeaveBalanceID");

                    b.HasIndex("LeaveTypeID");

                    b.HasIndex("EmployeeID", "LeaveTypeID", "Year")
                        .IsUnique()
                        .HasFilter("[Year] IS NOT NULL");

                    b.ToTable("HR_LeaveBalances", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.LeaveType", b =>
                {
                    b.Property<int>("LeaveTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveTypeID"));

                    b.Property<int?>("AnnualLimit")
                        .HasColumnType("int");

                    b.Property<bool?>("CanCarryForward")
                        .HasColumnType("bit");

                    b.Property<string>("ColorCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxCarryForward")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("RequiresApproval")
                        .HasColumnType("bit");

                    b.HasKey("LeaveTypeID");

                    b.ToTable("HR_LeaveTypes", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Loan", b =>
                {
                    b.Property<int>("LoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EMIAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int?>("InstallmentsPaid")
                        .HasColumnType("int");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LoanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoanStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TotalInstallments")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_Loans", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.MedicalQualification", b =>
                {
                    b.Property<int>("QualificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegreeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("University")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YearCompleted")
                        .HasColumnType("int");

                    b.HasKey("QualificationID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_MedicalQualifications", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.OnCallSchedule", b =>
                {
                    b.Property<int>("OnCallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnCallID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("OnCallDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("OnCallID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_OnCallSchedule", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Payroll", b =>
                {
                    b.Property<int>("PayrollID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollID"));

                    b.Property<decimal?>("Allowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BasicSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Bonuses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Deductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NetPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PayPeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PayPeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PayrollID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_Payrolls", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.PayrollTransaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PayrollID")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionID");

                    b.HasIndex("PayrollID");

                    b.ToTable("HR_PayrollTransactions", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SalaryGrade", b =>
                {
                    b.Property<int>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeID"));

                    b.Property<decimal?>("BasicSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GradeID");

                    b.ToTable("HR_SalaryGrades", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SalaryStructure", b =>
                {
                    b.Property<int>("SalaryStructureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryStructureID"));

                    b.Property<decimal?>("BasicSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("FixedAllowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MedicalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherAllowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TransportAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SalaryStructureID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("GradeID");

                    b.ToTable("HR_SalaryStructures", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SystemRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleID");

                    b.ToTable("HR_SystemRoles", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SystemUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("RoleID");

                    b.ToTable("HR_SystemUsers", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.WardAssignment", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentID"));

                    b.Property<DateTime?>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WardName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AssignmentID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HR_WardAssignments", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.WorkSchedule", b =>
                {
                    b.Property<int>("WorkScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkScheduleID"));

                    b.Property<int?>("BreakMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ScheduleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ScheduleType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkScheduleID");

                    b.ToTable("HR_WorkSchedules", (string)null);
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Attendance", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Designation", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.EmployeeCategory", "EmployeeCategory")
                        .WithMany("Designations")
                        .HasForeignKey("EmployeeCategoryID");

                    b.Navigation("EmployeeCategory");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EPFContribution", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Payroll", "Payroll")
                        .WithMany("EPFContributions")
                        .HasForeignKey("PayrollID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EPFETFInfo", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("EPFETFInfo")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.ETFContribution", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Payroll", "Payroll")
                        .WithMany("ETFContributions")
                        .HasForeignKey("PayrollID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Employee", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoopHospitalHRM.Models.Entities.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoopHospitalHRM.Models.Entities.EmployeeCategory", "EmployeeCategory")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeCategoryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoopHospitalHRM.Models.Entities.SalaryGrade", "SalaryGrade")
                        .WithMany("Employees")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoopHospitalHRM.Models.Entities.WorkSchedule", "WorkSchedule")
                        .WithMany("Employees")
                        .HasForeignKey("WorkScheduleID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("EmployeeCategory");

                    b.Navigation("SalaryGrade");

                    b.Navigation("WorkSchedule");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EmployeeAllowance", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.HospitalAllowance", "HospitalAllowance")
                        .WithMany("EmployeeAllowances")
                        .HasForeignKey("AllowanceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("EmployeeAllowances")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("HospitalAllowance");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EmployeePerformance", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("PerformanceReviews")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Reviewer")
                        .WithMany("GivenReviews")
                        .HasForeignKey("ReviewerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Leave", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("Leaves")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoopHospitalHRM.Models.Entities.LeaveType", "LeaveType")
                        .WithMany("Leaves")
                        .HasForeignKey("LeaveTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.LeaveBalance", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoopHospitalHRM.Models.Entities.LeaveType", "LeaveType")
                        .WithMany("LeaveBalances")
                        .HasForeignKey("LeaveTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Loan", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("Loans")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.MedicalQualification", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("MedicalQualifications")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.OnCallSchedule", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("OnCallSchedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Payroll", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.PayrollTransaction", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Payroll", "Payroll")
                        .WithMany("PayrollTransactions")
                        .HasForeignKey("PayrollID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SalaryStructure", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("SalaryStructures")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoopHospitalHRM.Models.Entities.SalaryGrade", "SalaryGrade")
                        .WithMany("SalaryStructures")
                        .HasForeignKey("GradeID");

                    b.Navigation("Employee");

                    b.Navigation("SalaryGrade");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SystemUser", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoopHospitalHRM.Models.Entities.SystemRole", "SystemRole")
                        .WithMany("SystemUsers")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employee");

                    b.Navigation("SystemRole");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.WardAssignment", b =>
                {
                    b.HasOne("CoopHospitalHRM.Models.Entities.Employee", "Employee")
                        .WithMany("WardAssignments")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Designation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("EPFETFInfo");

                    b.Navigation("EmployeeAllowances");

                    b.Navigation("GivenReviews");

                    b.Navigation("Leaves");

                    b.Navigation("Loans");

                    b.Navigation("MedicalQualifications");

                    b.Navigation("OnCallSchedules");

                    b.Navigation("Payrolls");

                    b.Navigation("PerformanceReviews");

                    b.Navigation("SalaryStructures");

                    b.Navigation("WardAssignments");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.EmployeeCategory", b =>
                {
                    b.Navigation("Designations");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.HospitalAllowance", b =>
                {
                    b.Navigation("EmployeeAllowances");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.LeaveType", b =>
                {
                    b.Navigation("LeaveBalances");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.Payroll", b =>
                {
                    b.Navigation("EPFContributions");

                    b.Navigation("ETFContributions");

                    b.Navigation("PayrollTransactions");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SalaryGrade", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("SalaryStructures");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.SystemRole", b =>
                {
                    b.Navigation("SystemUsers");
                });

            modelBuilder.Entity("CoopHospitalHRM.Models.Entities.WorkSchedule", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
